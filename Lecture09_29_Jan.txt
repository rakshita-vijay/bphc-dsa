not all linearly recursive functions are tail recursion
tail recursion: final action of a function is a recursive call

algorithm, program, pseudocode, flowchart

algorithm complexity:
binary search, linear search

ex:
1) tower of hanoi: O(2^n - 1) = O(2^n)
2) travelling salesman (greedy heuristics): O(n^2)
3) light switch: O(1)
4) finding a person in a queue: O(n) (asking people one by one if they are Mr. X)
5) finding a topic in a book number like 1, 1.1, 1.1.1, etc: O(logn)

to look for a word in an alphabetically sorted dictionary, how many algorithms are there? which one would you prefer?
linear search, binary search, fibonacci, hashmap, interpolation
